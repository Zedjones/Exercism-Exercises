
==================== FINAL INTERFACE ====================
2018-04-30 21:06:21.961876119 UTC

interface main:Main 8022
  interface hash: 24b5016e153c6996d977805094d43a4e
  ABI hash: 2827aa066105016884a2fa8db07bb05d
  export-list hash: 6acc734c9605af543b706cb1e3e720a9
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b5090c9e5880aa270c0aa13ebd021c60
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.6.0.0 QuickCheck-2.10.1
                      ansi-terminal-0.8.0.2 array-0.5.2.0 base-4.10.1.0 call-stack-0.1.0
                      colour-2.3.4 containers-0.5.10.2 deepseq-1.4.3.0 directory-1.3.0.2
                      filepath-1.4.1.2 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1 grains-1.1.0.4
                      hspec-2.4.8 hspec-core-2.4.8 hspec-expectations-0.8.2
                      integer-gmp-1.0.1.0 pretty-1.1.3.3 primitive-0.6.3.0
                      quickcheck-io-0.2.0 random-1.1 setenv-0.1.1.3 stm-2.4.5.0
                      template-haskell-2.12.0.0 tf-random-0.5 time-1.8.0.2
                      transformers-0.5.2.0 unix-2.7.2.2
orphans: colour-2.3.4:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         transformers-0.5.2.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.4.5.0:Control.Monad.STM base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         hspec-core-2.4.8:Test.Hspec.Core.Example
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  grains-1.1.0.4:Grains 74ddf808eadbe76d9b4892cdef87ec17
import  -/  hspec-2.4.8:Test.Hspec 4a09dd761f5419a640be51767630e5c4
import  -/  hspec-2.4.8:Test.Hspec.Runner d255ae9bd12c1bb228809e6e3ed94d28
import  -/  hspec-core-2.4.8:Test.Hspec.Core.Options 5c579672f8ae59c431df2842a1bad365
import  -/  hspec-core-2.4.8:Test.Hspec.Core.Runner fecb16ba562c55ffbd8f6859202ad5d3
import  -/  hspec-core-2.4.8:Test.Hspec.Core.Spec 8115ee228e269080204503e1dc84918b
import  -/  hspec-core-2.4.8:Test.Hspec.Core.Spec.Monad 3d6f6056e95b962121bf361a495237f5
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 8bc0d926d5b42398a254e04604809fe4
import  -/  integer-gmp-1.0.1.0:GHC.Integer.Type 5fa81108482c33b62ec3ac7464eece96
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
caf0ecd71f76d79aef270654d95baa4a
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
0b72780e65dd23c65d57658681a5614f
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main165
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.exitFailure1 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
2ce4391bc1eccfd17e8ff29ad13aac0b
  main10 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main11 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
78f9cc089eb8bb3be6c4a202328c5e73
  main100 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
bd9b08681ef53cf1de1cdb7fd65ab200
  main101 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (32) -}
8138e70e52e78dced4d395a21aec67b4
  main102 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main103) -}
5b3148f927d8d1338bce8b9b90116d30
  main103 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main104) -}
9828a27c104a8af5153ce66013521489
  main104 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("quare 32"#) -}
2fb857970ee28976fde35f9fa26ee6d1
  main105 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main106
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
e1d19747cda37265edcaf624aa1abd01
  main106 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main107) -}
e10308af37823a505bd75154942e68b1
  main107 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main114
                   Main.main51
                   GHC.Types.False
                   Main.main108
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
99e24dc169c35fdafc30fd7df040f2cb
  main108 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main109 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
3f4cebba402c876cdcf2052c10ca1cb8
  main109 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Grains.square Main.main113 of wild {
                   GHC.Base.Nothing -> Main.main112 eta2
                   GHC.Base.Just a1
                   -> case GHC.Integer.Type.eqInteger#
                             a1
                             Main.main111 of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> Main.main110 a1 eta2
                        GHC.Types.True -> (# eta2, GHC.Tuple.() #) } } }) -}
8af3d3fd7de13d574b2afa75deb38fbf
  main11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Integer.Type.eqInteger#
                        Grains.total
                        Main.main_eta1 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False -> Main.main12 eta2
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) } }) -}
003884cbdd5f5858b382d821e810afe1
  main110 ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
6951b3e604e6531403026e48be08ec6c
  main111 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (32768) -}
fa34e550f638923ed139597b49c09b9a
  main112 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
8200ad9bf0efa7c7c4a9f3458a83106c
  main113 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (16) -}
4c3d7be473090f2062603e4480768e83
  main114 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main115) -}
3714c6440aaeb26df4d3b561b5aa8953
  main115 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main116) -}
f4b135feb36de9dd20e682ab53a1b0df
  main116 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("quare 16"#) -}
056ca1b576cdcb8b125a9f5987845478
  main117 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main118
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
fc7368654fc77b8d096cb3774af7f503
  main118 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main119) -}
8d84359a1508fc52cc14acd94913da09
  main119 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main126
                   Main.main51
                   GHC.Types.False
                   Main.main120
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
c6fb99b1ac4b046c3d818dfe9d9f0dca
  main12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
8521394fc200e3a3672440d0ec151f33
  main120 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main121 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
4e3053d9e974aecc9b2b3980328ee04b
  main121 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Grains.square Main.main125 of wild {
                   GHC.Base.Nothing -> Main.main124 eta2
                   GHC.Base.Just a1
                   -> case GHC.Integer.Type.eqInteger#
                             a1
                             Main.main123 of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> Main.main122 a1 eta2
                        GHC.Types.True -> (# eta2, GHC.Tuple.() #) } } }) -}
2c66db2e178ae7705f31a56e9799b364
  main122 ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
5c14f08d378f3facdf91510cb581655d
  main123 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (8) -}
e137802afa1d7621d25950014b9c69db
  main124 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
ae28d8bb36a424b8e70d481e12c4ae8a
  main125 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
5662a037994c12dcf042130e6a65e70b
  main126 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main127) -}
3bbbea3cceb2fefdac309ef15e791000
  main127 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main128) -}
4660639a6f7bc9edcb2daf331946e96c
  main128 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("quare 4"#) -}
7cc2f76a2f09f64578c68b7a6f4ed01c
  main129 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main130
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
5fe93beb6e5dd4bd8ed43574b083b06f
  main13 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13 Main.main14) -}
f09b5893b2c8ae437649a5488b3eaf27
  main130 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main131) -}
14a202dd204c8972a899a21f5b3519df
  main131 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main137
                   Main.main51
                   GHC.Types.False
                   Main.main132
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
5f9553aaef3c1083da70f1dee681ad72
  main132 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main133 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
ebb880a8347fb968ee32451867da6d28
  main133 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Grains.square Main.main136 of wild {
                   GHC.Base.Nothing -> Main.main135 eta2
                   GHC.Base.Just a1
                   -> case GHC.Integer.Type.eqInteger#
                             a1
                             Main.main125 of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> Main.main134 a1 eta2
                        GHC.Types.True -> (# eta2, GHC.Tuple.() #) } } }) -}
078fbe02764a7515770b33f5d9717bfe
  main134 ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
807f3d3a2ff4a1e096c7f38849db9ce6
  main135 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
22b9839fe48b243ae25f8a339153741d
  main136 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
de01fce0ee524d67cbad37741a096e39
  main137 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main138) -}
e5adef438e38d6333e137acfdfbb91c2
  main138 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main139) -}
21a1894dccae2e790b6893f44036ecb6
  main139 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("quare 3"#) -}
b1bf499bb2d4d2db1f4f2116471cd250
  main14 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   Main.main15) -}
3c10dca93241d2831f002ca5633eff8c
  main140 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main141
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
1300f5428b9bf25b9c2f732d21425059
  main141 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main142) -}
1c6c06e3abe518b08e886c4bc59cfac8
  main142 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main148
                   Main.main51
                   GHC.Types.False
                   Main.main143
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
8a0fa7e4ac89b3348808293049184fba
  main143 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main144 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
cb50addba4b86a0194eafad7b760a2b3
  main144 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Grains.square Main.main147 of wild {
                   GHC.Base.Nothing -> Main.main146 eta2
                   GHC.Base.Just a1
                   -> case GHC.Integer.Type.eqInteger#
                             a1
                             Main.main147 of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> Main.main145 a1 eta2
                        GHC.Types.True -> (# eta2, GHC.Tuple.() #) } } }) -}
fa7367768f2daf59be81e6bf55f326bf
  main145 ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
9e7395e8fb8adb01e8a060ecde72db3c
  main146 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
40bffb88b76cae5bf5f1c431cc6563e5
  main147 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
b5f3f1815becf6d96bfcb518f33c0c5f
  main148 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main149) -}
ed7e5825c8b80554bd09bedbf9341825
  main149 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main150) -}
ef96b321bb85d2cb6d2d805b3845f7b8
  main15 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   Main.main16) -}
c9ae14b1295a4ebec0ce222383b14d19
  main150 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("quare 2"#) -}
7f59187e8e75779347662daf297d05e9
  main151 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main152
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
0f3d9115aa0d7f51dc223490c341ce29
  main152 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main153) -}
b73cad1188badf7ad369260d83bcb8c0
  main153 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main159
                   Main.main51
                   GHC.Types.False
                   Main.main154
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
72029943b96efdf4fa3b9f949c209760
  main154 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main155 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
8730db8d6692fa50d3c1124b5f03db40
  main155 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Grains.square Main.main158 of wild {
                   GHC.Base.Nothing -> Main.main157 eta2
                   GHC.Base.Just a1
                   -> case GHC.Integer.Type.eqInteger#
                             a1
                             Main.main158 of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> Main.main156 a1 eta2
                        GHC.Types.True -> (# eta2, GHC.Tuple.() #) } } }) -}
86e30af714a9d1e4c15c4fb92e6eb015
  main156 ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
c9fae2260619dd9e47daf682f9280ba9
  main157 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
7caee72fd14f3780825d1eec87db884a
  main158 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
e97be4803f79d4086f4188d5ce0c65ab
  main159 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main160) -}
cd8c1edb3c5e0f16072350a2e492023d
  main16 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main25
                   Main.main17
                   GHC.Stack.Types.EmptyCallStack) -}
77d21cb473dce07d2c2d688c172c1f9b
  main160 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main161) -}
c7784574cfe5be490b1d79f241dfc344
  main161 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("quare 1"#) -}
59e1d9ace25bad9ede42bc8e06126e4e
  main162 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main163) -}
58467d5e80cce4d7761594da85e55e4b
  main163 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main164) -}
53a7cd3177954a9a8d1de6d3d4b0ac10
  main164 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("quare"#) -}
9b721f9063b104d82a9f57ca51f8b007
  main165 :: Test.Hspec.Core.Options.Config
  {- Unfolding: (Test.Hspec.Core.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Base.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
42484c82e90e18ffe383575a8b59a3c2
  main166 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
a6d4cb6b606370639053c20a6e762619
  main17 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main24
                   Main.main23
                   Main.main21
                   Main.main20
                   Main.main19
                   Main.main20
                   Main.main18) -}
318e96fc252f9b57a15996cac7f3298e
  main18 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 65#) -}
454e69d6d32a1aceee394d1a4b5f1f3e
  main19 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 41#) -}
2857aa66090eaf86758f6d9ffba5093a
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s, Main.main3 #)) -}
68207b98c7e7075c3255caad5583453b
  main20 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 23#) -}
e75f95ce46e622254fa2615c651007fe
  main21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main22) -}
375e2462e9d32bfb84363b91ed816318
  main22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test/Tests.hs"#) -}
0341f92d63d8a82dd2778a15dd26308a
  main23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule2) -}
7d0a871aa2013b5d18ff6ad723499e50
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
cc348126ddb2af2e4ab649c5b484f841
  main25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main26) -}
ae962a049d73636d05d31359c533c80b
  main26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
874411020c2b9375764229d72665f95d
  main27 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main30
                   Main.main28) -}
47c4d1cc7de6227926965a8886e8387d
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main29) -}
766025250ab458eb7bcde08236f40751
  main29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("otal grains"#) -}
94d5ed2819b132cef1483563e9301168
  main3 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- Strictness: m, Unfolding: ((GHC.Tuple.(), Main.main4)) -}
d418cb72ccfe989e038f92d5c3161f6f
  main30 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 't'#) -}
74c7f7f7b4a9699c3c00db9dbf53f8a9
  main31 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main30
                   Main.main32) -}
5e41ea543daabd794ea0619b8e44babf
  main32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main33) -}
21b679a742724cd2a19dce767a5c9ecc
  main33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("otal"#) -}
0d132e265d2bed1399c9b3a32a1c7b06
  main34 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Strictness: m1,
     Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main162
                   Main.main35) -}
9923b126f5a7ffcd1491c7df3b03687d
  main35 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main151
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main36) -}
6def57d70b0a2c8a495292481ac5398d
  main36 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main140
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main37) -}
ceb637ca5997e28fa263054c602d7bd3
  main37 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main129
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main38) -}
1efc35fcba3084c58bbe710239748c05
  main38 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main117
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main39) -}
f6512920fb3b3f7c94750fc15f790e58
  main39 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main105
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main40) -}
395d15309d095c4bf92bb8aee46ac205
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main34
                   Main.main5) -}
eca7c27692b493a13e9e40c194e11ae1
  main40 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main93
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main41) -}
68903d3cacb7b5a2ea910f087ef347a2
  main41 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main81
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main42) -}
60b45137b990a90a40d86333d5fd78a4
  main42 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main72
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main43) -}
cea63766dd707b16c1327d4dcee74b40
  main43 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main63
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main44
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))) -}
864189bb6104da176149c2100e040924
  main44 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main45
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
445e13e79fc6dc549b9b01c8b097a0d3
  main45 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main46) -}
16956dde9d9a031a804bb04b7b79a9b7
  main46 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main59
                   Main.main51
                   GHC.Types.False
                   Main.main47
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
d96d101f8297484aaff9beb73774d0db
  main47 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main48 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
a320baa582b157582ea7860e833df3ca
  main48 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Grains.square Main.main50 of wild {
                   GHC.Base.Nothing -> (# eta2, GHC.Tuple.() #)
                   GHC.Base.Just a1 -> Main.main49 a1 eta2 }) -}
7687c8fc36397652dc80ae4233c61e65
  main49 ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
50bfc945ea760a34ecfaed1eced229bf
  main5 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main6
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
29b125874bac94dc508458ba3c4a9664
  main50 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (65) -}
1debb08f2b1e899f710dc03dde566771
  main51 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13 Main.main52) -}
3ffb719b55c2e0f7fb508929c00a098f
  main52 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   Main.main53) -}
ba2922e7a1ccfc58b403b1330b2eb2a6
  main53 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   Main.main54) -}
4dbd59686833b0d8c9250c125b7b90e3
  main54 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main25
                   Main.main55
                   GHC.Stack.Types.EmptyCallStack) -}
71e5ea3d50a00508c670ec5a5dfd90d2
  main55 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main24
                   Main.main23
                   Main.main21
                   Main.main58
                   Main.main57
                   Main.main58
                   Main.main56) -}
e0e9d5c5a143347c32e9d198262f4415
  main56 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 69#) -}
92259dd071eb9f31756f6b487c66ed65
  main57 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 45#) -}
22fe67de83bf44954443eaeeed730bad
  main58 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 18#) -}
2ffe009e406efccda011685e34a6b7d9
  main59 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main60) -}
05a03be070132ff20a3f96523191fda6
  main6 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Strictness: m1,
     Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main31
                   Main.main7
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
2fb915e5ed10e48c1936b51af3e60ffd
  main60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main61) -}
cbbd54a7a26b8f2c4a77cf32739c474b
  main61 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("quare bigger than 64"#) -}
0ea5d8b09c19c572580f15aa01b0dc14
  main62 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 's'#) -}
87decba16d6f562d5ea3772741d921bd
  main63 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main64
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
7cdb14b5f5ead6ebe9a3ca27588aa459
  main64 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main65) -}
8ece121e0960850d4a3739bb5f197d20
  main65 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main69
                   Main.main51
                   GHC.Types.False
                   Main.main66
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
47bb5c8aaaeb75fb076a87abc3cba6d5
  main66 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main67 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
739b929f71e884fcf0c9a3c7c46f8fe9
  main67 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Grains.square Main.main68 of wild {
                   GHC.Base.Nothing -> (# eta2, GHC.Tuple.() #)
                   GHC.Base.Just a1 -> Main.main49 a1 eta2 }) -}
b254fe0efadd77a5b42302ee3b8a16d6
  main68 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
b8174825f91f5a15d33dcb9eb4dfcdf1
  main69 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main70) -}
fb8da23f508f54c763a858333617ea8c
  main7 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main8
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
9530f8385f6af912db76a16474a05a67
  main70 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main71) -}
63ddb8a91069941b8a751475fb52ef90
  main71 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("quare 0"#) -}
c0548ea0e54f92efe27a5e4a5b5fc161
  main72 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main73
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
ded373cc61cef9487dfeb00ce5524e81
  main73 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main74) -}
fae76236990835c2c76ed7563950b7a8
  main74 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main78
                   Main.main51
                   GHC.Types.False
                   Main.main75
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
aae0b5e51432ce725b65273ccf7af9dc
  main75 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main76 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
7b0aad363b388c9f1af6f82d48c8e1a2
  main76 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Grains.square Main.main77 of wild {
                   GHC.Base.Nothing -> (# eta2, GHC.Tuple.() #)
                   GHC.Base.Just a1 -> Main.main49 a1 eta2 }) -}
f3e82eb6103bf912fdc26067d965b685
  main77 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
e47a0ca09951c48b2259d3ced92c6e43
  main78 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main79) -}
0e13727fc3466cc47a9bba9cbda4ed1e
  main79 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main80) -}
65c7eabf033e7595a3b4b9dad61015a2
  main8 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main9) -}
3deb15cc0418944d01aca3ae0facc3c6
  main80 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("quare negative"#) -}
eea444132338a4a134fb2a4b70cafe28
  main81 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main82
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
f3db0be78082772bd3fed378df00f2f5
  main82 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main83) -}
43f4f5d09d4f8088031d0d46dd6bb10f
  main83 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main90
                   Main.main51
                   GHC.Types.False
                   Main.main84
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
1b62642dedc00c6720081c6229afa411
  main84 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main85 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
80f78bf5366ec936e8ba0c50f6a29987
  main85 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Grains.square Main.main89 of wild {
                   GHC.Base.Nothing -> Main.main88 eta2
                   GHC.Base.Just a1
                   -> case GHC.Integer.Type.eqInteger#
                             a1
                             Main.main87 of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> Main.main86 a1 eta2
                        GHC.Types.True -> (# eta2, GHC.Tuple.() #) } } }) -}
54eb346c1846f1807856f50c68b03517
  main86 ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
18ca32ae231c9f502d5fabe037bb679c
  main87 :: GHC.Integer.Type.Integer
  {- Unfolding: (9223372036854775808) -}
5304c097bd0f1e0b3a5b440240219529
  main88 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
e7c99a920385eaab14ace8393fa6eb3d
  main89 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (64) -}
4fe1d5ee0b43604e595b9faa6145ac93
  main9 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main27
                   Main.main13
                   GHC.Types.False
                   Main.main10
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
700a2ab73d7f63f98ecc5853ab4f5f12
  main90 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main91) -}
9bb06ca8015bbffaca23dda814a0aa66
  main91 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main92) -}
2513393a03bcae95345bd66640c0f9a0
  main92 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("quare 64"#) -}
05641c8e5f5cb4162aba5de89bd453b0
  main93 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main94
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
6e47235a68c4929752737c08f2cf8742
  main94 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main95) -}
5a2507e589b1c5b5ba3e9c1dbbba402b
  main95 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main102
                   Main.main51
                   GHC.Types.False
                   Main.main96
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
ad008ed0fe81a28f05c6d88b5ac30578
  main96 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main97 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
87d5a7f4862c0918e921acd0c4486fd1
  main97 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Grains.square Main.main101 of wild {
                   GHC.Base.Nothing -> Main.main100 eta2
                   GHC.Base.Just a1
                   -> case GHC.Integer.Type.eqInteger#
                             a1
                             Main.main99 of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> Main.main98 a1 eta2
                        GHC.Types.True -> (# eta2, GHC.Tuple.() #) } } }) -}
2c961e89171225a6f0dbaa9bddf7a8b1
  main98 ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
12c262de7a48a81e1742df7a8b2e0baa
  main99 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2147483648) -}
36e9a49e31319f0beef65522f716f638
  main_eta1 :: GHC.Integer.Type.Integer
  {- Unfolding: (18446744073709551615) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

