
==================== FINAL INTERFACE ====================
2018-12-03 15:50:10.626278295 UTC

interface armstrong-numbers-1.0.0.1-JgDveaVKzRWRC1wfQVaY6:Paths_armstrong_numbers 8043
  interface hash: d12061f4f3ce6cf3d5862e291fb05bed
  ABI hash: 1c87b864c8392892254e6faa93910271
  export-list hash: 653c6e1a72161df891b2154060d68f6b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 72621d698ef0939281be75fd58e3a4ef
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths_armstrong_numbers.getBinDir
  Paths_armstrong_numbers.getDataDir
  Paths_armstrong_numbers.getDataFileName
  Paths_armstrong_numbers.getDynLibDir
  Paths_armstrong_numbers.getLibDir
  Paths_armstrong_numbers.getLibexecDir
  Paths_armstrong_numbers.getSysconfDir
  Paths_armstrong_numbers.version
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:Control.Exception 3d8e6cda20877f889f07bc7c0f5cac36
import  -/  base-4.11.1.0:Data.Version 26b96b3dd83a23703e0b8110475fc04a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:GHC.IO.Exception acc060dca2e46d8b8275d06ee7d5d60d
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.Environment 7fdede11f96719870569cb0da1adac2f
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
addDependentFile "/home/zedjones/.stack/programs/x86_64-linux/ghc-8.4.3/lib/ghc-8.4.3/include/ghcversion.h" 61cc4580d32de09862d412848a79cd26
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-2.2.0.1/build/autogen/cabal_macros.h" cd8d399a0bb14f22b98e7f63aed861e2
addDependentFile "/usr/include/stdc-predef.h" 9ecfca84a02c55ee0452e85b6c4fd8d5
e95bfef6ea8a5229c092a1fb4fdde480
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Paths_armstrong_numbers.$trModule3
                   Paths_armstrong_numbers.$trModule1) -}
41b7f13d314591f3aeed452427016940
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Paths_armstrong_numbers.$trModule2) -}
5cf9e9da534ad88a688688ed7a624aff
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Paths_armstrong_numbers"#) -}
cd5f0070278a2877c2f8407bcbe65ec2
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Paths_armstrong_numbers.$trModule4) -}
4ddd2a620c223fb6a6d74b4f44ba4223
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("armstrong-numbers-1.0.0.1-JgDveaVKzRWRC1wfQVaY6"#) -}
c7df57406d3fc8300b963b631e7ff8b6
  getBinDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getBinDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
8cc62c1d14c6ed3e36ad5ced6aab0f86
  getBinDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_armstrong_numbers.getBinDir5
                   Paths_armstrong_numbers.getBinDir2
                   eta) -}
6f3bb28bf8d6569bd651936addea2865
  getBinDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_armstrong_numbers.getBinDir3 #) } } } } }) -}
f8549217270d39a372f1785adc4831e2
  getBinDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getBinDir4) -}
a06cb4158b2f9638d3ed9df328862410
  getBinDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/zedjones/Documents/Personal/Haskell/Exercism-Exercises/haskell/armstrong-numbers/.stack-work/install/x86_64-linux/lts-12.4/8.4.3/bin"#) -}
0e04fc75246813cbb762a95413087867
  getBinDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_armstrong_numbers.getBinDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_armstrong_numbers.getBinDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
4799f837c506994fcca3623f1beaaf9b
  getBinDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getBinDir7) -}
8f949a418acb251fce52a4ef54cdaf48
  getBinDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("armstrong_numbers_bindir"#) -}
064af5663818d432cf629f297a26d785
  getDataDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getDataDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
dbf8a1ef8ec1a7a396d659fefcaefb13
  getDataDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_armstrong_numbers.getDataDir5
                   Paths_armstrong_numbers.getDataDir2
                   eta) -}
a066ff9c0d4e2a1f657eed7787c52475
  getDataDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_armstrong_numbers.getDataDir3 #) } } } } }) -}
a026c379d562a960028cbcd4629501ea
  getDataDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getDataDir4) -}
61fb6b46fe52371cb9dfe2b042e99162
  getDataDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/zedjones/Documents/Personal/Haskell/Exercism-Exercises/haskell/armstrong-numbers/.stack-work/install/x86_64-linux/lts-12.4/8.4.3/share/x86_64-linux-ghc-8.4.3/armstrong-numbers-1.0.0.1"#) -}
ca267117b667cc42b52fd8e478c84619
  getDataDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_armstrong_numbers.getDataDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_armstrong_numbers.getDataDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
d5c0c400745ccc3f53594bfe75a81132
  getDataDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getDataDir7) -}
26c4e3310c31b0cf16fcf4aacaee2d83
  getDataDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("armstrong_numbers_datadir"#) -}
31dc52992164ff7077bd709cfba44b9d
  getDataFileName :: GHC.IO.FilePath -> GHC.Types.IO GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getDataFileName1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R)) -}
743dd4c234eaba57b5cc5dbc5dff54fe
  getDataFileName1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (name :: GHC.IO.FilePath)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.SomeException
                        Paths_armstrong_numbers.getDataDir5
                        Paths_armstrong_numbers.getDataDir2
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.++
                      @ GHC.Types.Char
                      ipv1
                      (GHC.CString.unpackAppendCString#
                         Paths_armstrong_numbers.getDataFileName2
                         name) #) }) -}
3864aaf15eebd325a8b48aeef9430621
  getDataFileName2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/"#) -}
c83cfbc38ace6cc067a67a4f1b4efb44
  getDynLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getDynLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
e9763856e245bf13c20be4717533ad68
  getDynLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_armstrong_numbers.getDynLibDir5
                   Paths_armstrong_numbers.getDynLibDir2
                   eta) -}
9467890c1ba506d10205cb741142fcb7
  getDynLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1#
                        -> (# eta, Paths_armstrong_numbers.getDynLibDir3 #) } } } } }) -}
671969361fdecb2de2e70277fb566228
  getDynLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getDynLibDir4) -}
6445931a893c47ba8ea554ee90f00274
  getDynLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/zedjones/Documents/Personal/Haskell/Exercism-Exercises/haskell/armstrong-numbers/.stack-work/install/x86_64-linux/lts-12.4/8.4.3/lib/x86_64-linux-ghc-8.4.3"#) -}
66445c87bff8e0a4fb39bac9765e054c
  getDynLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_armstrong_numbers.getDynLibDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_armstrong_numbers.getDynLibDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
fb0f9fc2d37c8bc59a110c83ba05810d
  getDynLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getDynLibDir7) -}
898222be4c570941fa1885cd621c12f9
  getDynLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("armstrong_numbers_dynlibdir"#) -}
8fc0a80d649ea4778f0ab92e511dd8fc
  getLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
7112297f51c65886bf1c87a7b1057b0f
  getLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_armstrong_numbers.getLibDir5
                   Paths_armstrong_numbers.getLibDir2
                   eta) -}
7b5bcbcfda1fab3ed6a9f2f6a1714048
  getLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_armstrong_numbers.getLibDir3 #) } } } } }) -}
75087e25db42ead9f223ea4fee3ca369
  getLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getLibDir4) -}
1f7187b51a1bf68ce1a4815f7c85cf85
  getLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/zedjones/Documents/Personal/Haskell/Exercism-Exercises/haskell/armstrong-numbers/.stack-work/install/x86_64-linux/lts-12.4/8.4.3/lib/x86_64-linux-ghc-8.4.3/armstrong-numbers-1.0.0.1-JgDveaVKzRWRC1wfQVaY6"#) -}
d96f45b069c8aad3591950a81e77580e
  getLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_armstrong_numbers.getLibDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_armstrong_numbers.getLibDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
a4e5514971e190a0f0ed7b0727d05884
  getLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getLibDir7) -}
a1cecd2336fc3e3d6207264d2c67bcd7
  getLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("armstrong_numbers_libdir"#) -}
3b780f5c78ed908a02b0d6c384d9dc75
  getLibexecDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getLibexecDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
8ef13a01fac23b2dfa1f5ef94e748766
  getLibexecDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_armstrong_numbers.getLibexecDir5
                   Paths_armstrong_numbers.getLibexecDir2
                   eta) -}
7df63bb17fa874257f0d5d38af0f9116
  getLibexecDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1#
                        -> (# eta, Paths_armstrong_numbers.getLibexecDir3 #) } } } } }) -}
faf6c1caa200c9842bcc83156d08a3ea
  getLibexecDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getLibexecDir4) -}
273ed0ec1929da4e6b298b1d3eedc119
  getLibexecDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/zedjones/Documents/Personal/Haskell/Exercism-Exercises/haskell/armstrong-numbers/.stack-work/install/x86_64-linux/lts-12.4/8.4.3/libexec/x86_64-linux-ghc-8.4.3/armstrong-numbers-1.0.0.1"#) -}
ae6846ec7efba383aa67f0f991797a7e
  getLibexecDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_armstrong_numbers.getLibexecDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_armstrong_numbers.getLibexecDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
10debf95689f0ed8b8e52dc127250c62
  getLibexecDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getLibexecDir7) -}
1d131e75d8c8fb12a2f1846d52972061
  getLibexecDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("armstrong_numbers_libexecdir"#) -}
704ab793ac71eab23602de587403b64f
  getSysconfDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getSysconfDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
7a9c59ee3e782b3af93b119aa9cca82f
  getSysconfDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_armstrong_numbers.getSysconfDir5
                   Paths_armstrong_numbers.getSysconfDir2
                   eta) -}
6c8fa2225b3111188df2e1ab0f8eb536
  getSysconfDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1#
                        -> (# eta, Paths_armstrong_numbers.getSysconfDir3 #) } } } } }) -}
1559c15c08d097012b48dd208bb69ef5
  getSysconfDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getSysconfDir4) -}
d971ceb9f3adb942ba3b32774eac1114
  getSysconfDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/zedjones/Documents/Personal/Haskell/Exercism-Exercises/haskell/armstrong-numbers/.stack-work/install/x86_64-linux/lts-12.4/8.4.3/etc"#) -}
d54f53f1c3df9938c6df985fe6afc022
  getSysconfDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_armstrong_numbers.getSysconfDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_armstrong_numbers.getSysconfDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
9ac2a5bbb13a5eb26dce58ca5aef69cc
  getSysconfDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getSysconfDir7) -}
40b08072eff5a3944124d3a27921e8a6
  getSysconfDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("armstrong_numbers_sysconfdir"#) -}
7bd579ada38720430650c2a7a0316341
  version :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Paths_armstrong_numbers.version1
                   (GHC.Types.[] @ GHC.Base.String)) -}
68809f505ebf2105b22784bf8d342c68
  version1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_armstrong_numbers.version5
                   Paths_armstrong_numbers.version2) -}
b941d684b617d67acf2075be875e5924
  version2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_armstrong_numbers.version6
                   Paths_armstrong_numbers.version3) -}
343ff66e944b85107ecc3eabbdaa6fbb
  version3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_armstrong_numbers.version6
                   Paths_armstrong_numbers.version4) -}
c1a1c350ea48747cb5821897d0a50a45
  version4 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_armstrong_numbers.version5
                   (GHC.Types.[] @ GHC.Types.Int)) -}
43f0c88544ffb3dbd5d391cbfd911b77
  version5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
c804a42a0ac5d58fd7693cc4ea75ce1d
  version6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

