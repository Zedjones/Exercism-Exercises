
==================== FINAL INTERFACE ====================
2018-12-03 16:42:53.441250058 UTC

interface armstrong-numbers-1.0.0.1-JgDveaVKzRWRC1wfQVaY6:ArmstrongNumbers 8043
  interface hash: 8efc1f171619a3b9ae92f64e071fcb10
  ABI hash: ceb3c91632e2dfe559a414c678a7653f
  export-list hash: 54493671ffa48a8987061eabb8619079
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1f596daf84c7527444ae092b33472386
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  ArmstrongNumbers.armstrong
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Enum 8824828888f5a89ecc9e7c73f05f3151
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
30c220f282ab812b8d2550e2f32e380c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   ArmstrongNumbers.$trModule3
                   ArmstrongNumbers.$trModule1) -}
955ced0a20c9ef20dbc11485b95fd7cf
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ArmstrongNumbers.$trModule2) -}
6cee3ffe6c0ec29329558a9759e190ea
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ArmstrongNumbers"#) -}
036d358dcdfa52fd26e9484f96ee3771
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ArmstrongNumbers.$trModule4) -}
de420c0f8ddc13ae407511173fac6ebf
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("armstrong-numbers-1.0.0.1-JgDveaVKzRWRC1wfQVaY6"#) -}
15b2449f1407fd246ec086c43a2bab44
  armstrong :: GHC.Real.Integral a => a -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(LLLLLLLLC(S)),1*U(A,A,A,A,A,A,A,A,1*C1(U))><L,U>,
     Unfolding: (\ @ a ($dIntegral :: GHC.Real.Integral a) (a1 :: a) ->
                 case GHC.Integer.Type.integerToInt
                        (GHC.Real.toInteger @ a $dIntegral a1) of wild { DEFAULT ->
                 case GHC.Show.$wshowSignedInt
                        0#
                        wild
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 let {
                   x :: GHC.Types.Int
                   = case GHC.Show.$wshowSignedInt
                            0#
                            wild
                            (GHC.Types.[] @ GHC.Types.Char) of ww1 { (#,#) ww2 ww3 ->
                     case GHC.List.$wlenAcc
                            @ GHC.Types.Char
                            (GHC.Types.: @ GHC.Types.Char ww2 ww3)
                            0# of ww7 { DEFAULT ->
                     GHC.Types.I# ww7 } }
                 } in
                 let {
                   $j :: GHC.Prim.Int# -> GHC.Types.Bool
                     <join 1> {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# x1 wild)
                 } in
                 letrec {
                   $wgo :: [GHC.Types.Char] -> GHC.Prim.Int# -> GHC.Types.Bool
                     <join 2> {- Arity: 2, Strictness: <S,1*U><S,U>, Inline: [0] -}
                   = \ (w :: [GHC.Types.Char]) (ww :: GHC.Prim.Int#) ->
                     case w of wild1 {
                       [] -> $j ww
                       : y ys
                       -> case x of wild2 { GHC.Types.I# x1 ->
                          case GHC.Prim.<# x1 0# of lwild {
                            DEFAULT
                            -> case x1 of wild3 {
                                 DEFAULT
                                 -> case y of wild4 { GHC.Types.C# c# ->
                                    case GHC.Real.$wf1
                                           (GHC.Prim.-# (GHC.Prim.ord# c#) 48#)
                                           wild3 of ww1 { DEFAULT ->
                                    $wgo ys (GHC.Prim.+# ww ww1) } }
                                 0# -> $wgo ys (GHC.Prim.+# ww 1#) }
                            1# -> case GHC.Real.^2 ret_ty GHC.Types.Bool of {} } } }
                 } in
                 $wgo (GHC.Types.: @ GHC.Types.Char ww5 ww6) 0# } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

