
==================== FINAL INTERFACE ====================
2018-12-03 15:50:11.294876636 UTC

interface main:Paths_armstrong_numbers 8043
  interface hash: 0abf90d964786a554514ae9aed1439ed
  ABI hash: 54c56a2f3fbd0a82384606227248d306
  export-list hash: 945689c4cc6c2d65c02b4c27d14d3d56
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6d21da3b295b5ce342d1ad0ccdf19631
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths_armstrong_numbers.getBinDir
  Paths_armstrong_numbers.getDataDir
  Paths_armstrong_numbers.getDataFileName
  Paths_armstrong_numbers.getDynLibDir
  Paths_armstrong_numbers.getLibDir
  Paths_armstrong_numbers.getLibexecDir
  Paths_armstrong_numbers.getSysconfDir
  Paths_armstrong_numbers.version
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:Control.Exception 3d8e6cda20877f889f07bc7c0f5cac36
import  -/  base-4.11.1.0:Data.Version 26b96b3dd83a23703e0b8110475fc04a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:GHC.IO.Exception acc060dca2e46d8b8275d06ee7d5d60d
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.Environment 7fdede11f96719870569cb0da1adac2f
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
addDependentFile "/home/zedjones/.stack/programs/x86_64-linux/ghc-8.4.3/lib/ghc-8.4.3/include/ghcversion.h" 61cc4580d32de09862d412848a79cd26
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-2.2.0.1/build/test/autogen/cabal_macros.h" 849efce82a7421a80ed11c68781413a9
addDependentFile "/usr/include/stdc-predef.h" 9ecfca84a02c55ee0452e85b6c4fd8d5
f220841b37e556e099555d3882384252
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Paths_armstrong_numbers.$trModule3
                   Paths_armstrong_numbers.$trModule1) -}
a54ad5fd666c691d87149e21d7bc8933
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Paths_armstrong_numbers.$trModule2) -}
6094953dac0b45651337efd314828800
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Paths_armstrong_numbers"#) -}
86a8a563d1f5da727adee5375bf630e0
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Paths_armstrong_numbers.$trModule4) -}
e2dcb385371cc786b67d5845cc89aec7
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
59797f81f34a026e6200bc418b545a47
  getBinDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getBinDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
3453f6ea08a7e7e14d704e9de863febf
  getBinDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_armstrong_numbers.getBinDir5
                   Paths_armstrong_numbers.getBinDir2
                   eta) -}
452b0effb97fbd187a32ebd1102adea6
  getBinDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_armstrong_numbers.getBinDir3 #) } } } } }) -}
516635b59f5c38dcdd9c9683120304d4
  getBinDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getBinDir4) -}
e836dbec1cde81f9d18f4d608525a9bf
  getBinDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/zedjones/Documents/Personal/Haskell/Exercism-Exercises/haskell/armstrong-numbers/.stack-work/install/x86_64-linux/lts-12.4/8.4.3/bin"#) -}
59db8f2ff78ebe6baa9f078666e24d2b
  getBinDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_armstrong_numbers.getBinDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_armstrong_numbers.getBinDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
63e0dacaa02a2ab72ac87446764bdc41
  getBinDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getBinDir7) -}
8b4b904c196fd4531fc5336d10c446c3
  getBinDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("armstrong_numbers_bindir"#) -}
7f79d0a2170794c03e3cbf001e50e375
  getDataDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getDataDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
a04bed832d1e6c325d4d614e6e8ac6b1
  getDataDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_armstrong_numbers.getDataDir5
                   Paths_armstrong_numbers.getDataDir2
                   eta) -}
34e93602a584232b5a47801b6c5e8201
  getDataDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_armstrong_numbers.getDataDir3 #) } } } } }) -}
00945be1144b8e24c5f021ea96937555
  getDataDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getDataDir4) -}
72676b442c661473be7ddf1d20328865
  getDataDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/zedjones/Documents/Personal/Haskell/Exercism-Exercises/haskell/armstrong-numbers/.stack-work/install/x86_64-linux/lts-12.4/8.4.3/share/x86_64-linux-ghc-8.4.3/armstrong-numbers-1.0.0.1"#) -}
264bb442e0cccd56ab346fb77b76cb39
  getDataDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_armstrong_numbers.getDataDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_armstrong_numbers.getDataDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
aeaf2f954a6a6e5fc868009954d92ec4
  getDataDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getDataDir7) -}
566b3ebc6c6f5d4aad638e2011e0eff9
  getDataDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("armstrong_numbers_datadir"#) -}
e3019e92473eca3ca20af12e22534fa3
  getDataFileName :: GHC.IO.FilePath -> GHC.Types.IO GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getDataFileName1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R)) -}
632b2eb6c9d6d68545710a02ebd8bc9a
  getDataFileName1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (name :: GHC.IO.FilePath)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.SomeException
                        Paths_armstrong_numbers.getDataDir5
                        Paths_armstrong_numbers.getDataDir2
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.++
                      @ GHC.Types.Char
                      ipv1
                      (GHC.CString.unpackAppendCString#
                         Paths_armstrong_numbers.getDataFileName2
                         name) #) }) -}
0ed3b8b2f633387da507cf9a3c68419c
  getDataFileName2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/"#) -}
2dff7b16aaa87be5d61717ec515169c1
  getDynLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getDynLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
dd5c1df440ba214e1e3134c3ffd907e4
  getDynLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_armstrong_numbers.getDynLibDir5
                   Paths_armstrong_numbers.getDynLibDir2
                   eta) -}
fd6f5290c7aae9abd52c0f55011f8e0c
  getDynLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1#
                        -> (# eta, Paths_armstrong_numbers.getDynLibDir3 #) } } } } }) -}
d83a8a38e1a8c95d009e46fdb84edb9f
  getDynLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getDynLibDir4) -}
58a5ca0f9fac33691653cfd95d967507
  getDynLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/zedjones/Documents/Personal/Haskell/Exercism-Exercises/haskell/armstrong-numbers/.stack-work/install/x86_64-linux/lts-12.4/8.4.3/lib/x86_64-linux-ghc-8.4.3"#) -}
74d7153acd2e9757318b23647cb11946
  getDynLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_armstrong_numbers.getDynLibDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_armstrong_numbers.getDynLibDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
d8460d58a84b4e58a0e809f97dbe171f
  getDynLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getDynLibDir7) -}
19c00fde62f31761914aa8f8f4f249f1
  getDynLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("armstrong_numbers_dynlibdir"#) -}
7ef3025754bce0c5de8f833c35edaedb
  getLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
3d63fc7cad8247e4d01c52232b42f678
  getLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_armstrong_numbers.getLibDir5
                   Paths_armstrong_numbers.getLibDir2
                   eta) -}
527596ef1d4553c24be4393e448e478d
  getLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_armstrong_numbers.getLibDir3 #) } } } } }) -}
e48263559fd0e84d466c7284cf32c2e6
  getLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getLibDir4) -}
20ef6539cd80f38e78976913b0a5f2a3
  getLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/zedjones/Documents/Personal/Haskell/Exercism-Exercises/haskell/armstrong-numbers/.stack-work/install/x86_64-linux/lts-12.4/8.4.3/lib/x86_64-linux-ghc-8.4.3/armstrong-numbers-1.0.0.1-L875Nm2SsR8HOos9payBbi-test"#) -}
64842d2abdb90039410276e47b6d8faa
  getLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_armstrong_numbers.getLibDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_armstrong_numbers.getLibDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
cdfda254deb469be873c869953332686
  getLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getLibDir7) -}
ef892531aa119ee59b8b8b27d64c1aee
  getLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("armstrong_numbers_libdir"#) -}
a2eca5d292970ec7455d319d852f2d61
  getLibexecDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getLibexecDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
672e67d98b5dbd28a65c8b6acfca8b58
  getLibexecDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_armstrong_numbers.getLibexecDir5
                   Paths_armstrong_numbers.getLibexecDir2
                   eta) -}
a26a79d956be6e1af3447220dc88c1fe
  getLibexecDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1#
                        -> (# eta, Paths_armstrong_numbers.getLibexecDir3 #) } } } } }) -}
2938742a2c396805244fa85a2e0edf22
  getLibexecDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getLibexecDir4) -}
f05343b66a0a39358c0d4a0ba95e1fd9
  getLibexecDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/zedjones/Documents/Personal/Haskell/Exercism-Exercises/haskell/armstrong-numbers/.stack-work/install/x86_64-linux/lts-12.4/8.4.3/libexec/x86_64-linux-ghc-8.4.3/armstrong-numbers-1.0.0.1"#) -}
f06ddda47be92dbee88d9937532dc401
  getLibexecDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_armstrong_numbers.getLibexecDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_armstrong_numbers.getLibexecDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
7d1f06b7692ee21c7af96636a6083fbb
  getLibexecDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getLibexecDir7) -}
b17c60e58c35f1ae0edba88a0a0d1355
  getLibexecDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("armstrong_numbers_libexecdir"#) -}
fdd53078b626543bca76f35d7a5d236c
  getSysconfDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_armstrong_numbers.getSysconfDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
448c7c2ad4b127869224c09b33f16dc7
  getSysconfDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_armstrong_numbers.getSysconfDir5
                   Paths_armstrong_numbers.getSysconfDir2
                   eta) -}
221dd97536a3b4ff5ef6b0529a314d50
  getSysconfDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1#
                        -> (# eta, Paths_armstrong_numbers.getSysconfDir3 #) } } } } }) -}
61dc94c2f4b076e599ab72cd973cef7e
  getSysconfDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getSysconfDir4) -}
79b6a63574ce6f8ea118aebe547129ad
  getSysconfDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/zedjones/Documents/Personal/Haskell/Exercism-Exercises/haskell/armstrong-numbers/.stack-work/install/x86_64-linux/lts-12.4/8.4.3/etc"#) -}
a1cc4dcb114966345c4089b5f901d989
  getSysconfDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_armstrong_numbers.getSysconfDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_armstrong_numbers.getSysconfDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
8c4afb0f0c676e962d554cb3e3b59ed2
  getSysconfDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_armstrong_numbers.getSysconfDir7) -}
771c96f8058f40db72f6df87770789d4
  getSysconfDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("armstrong_numbers_sysconfdir"#) -}
5c773524634104de3554eecde61a4238
  version :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Paths_armstrong_numbers.version1
                   (GHC.Types.[] @ GHC.Base.String)) -}
0761911c25f5638cd02cc8a37b665c3f
  version1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_armstrong_numbers.version5
                   Paths_armstrong_numbers.version2) -}
a47b0e0ef0aa64d15413c470e69afc6b
  version2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_armstrong_numbers.version6
                   Paths_armstrong_numbers.version3) -}
8bfcb7be0a6c8d76086ea5caef8040e4
  version3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_armstrong_numbers.version6
                   Paths_armstrong_numbers.version4) -}
4dbdc115729891c5fd577365087a85b3
  version4 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_armstrong_numbers.version5
                   (GHC.Types.[] @ GHC.Types.Int)) -}
200e5923e01bc93088f3e3dfc20ebb89
  version5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
1f88c0f55028805fd7fbe7fe9eecd5e4
  version6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

