
==================== FINAL INTERFACE ====================
2018-05-01 04:15:37.602709399 UTC

interface acronym-1.3.0.5-Jx6WlfWQLaj4Omxlz69VMU:Acronym 8022
  interface hash: 7dbc1d3f27da4aeb00e93f591681f986
  ABI hash: 12fb6e210064ca6cb4c3a39b2e7463c3
  export-list hash: 43408f935828099a159a97d31e426c0c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 26e0ff4b0ff758fc4ebf6a516aed248e
  sig of: Nothing
  used TH splices: False
  where
exports:
  Acronym.abbreviate
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:Data.Char fe4e3458190deeac19969ce15e33bed9
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:Data.OldList 555420b092ca8cf0a8f9666bc0e07dcf
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:GHC.Unicode 49c9de4fffed0d9be65aaeb6a60b757c
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
01f60d42ef126fb25317ea129a36d633
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Acronym.$trModule3
                   Acronym.$trModule1) -}
41a6a8a79a40ff067d23dceed2c18841
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Acronym.$trModule2) -}
43585c6eeeea43568a90ba53cb45d560
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Acronym"#) -}
54eac319fff9c0679d3b4d842de59deb
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Acronym.$trModule4) -}
783b8f9363c47932f2d804f3d299b4f7
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("acronym-1.3.0.5-Jx6WlfWQLaj4Omxlz69VMU"#) -}
3fd43ece7be1354d5508a4a81fb420b1
  abbreviate :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (xs :: GHC.Base.String) ->
                 Acronym.abbreviate_go1
                   (Acronym.abbreviate_go
                      (GHC.Base.map
                         @ GHC.Types.Char
                         @ GHC.Types.Char
                         Acronym.fixString
                         xs))) -}
b614d3176ebce93c7b7138395df1dab8
  abbreviate1 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ' '#) -}
a01b28e03184f1b1c9d3da8e81e7d0c5
  abbreviate_go :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
5e022f3b4d54dbcdeac4daebfa16e4d6
  abbreviate_go1 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
7d42d47c1dfc57934b0236df2c8f14c9
  fixString :: GHC.Types.Char -> GHC.Types.Char
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: GHC.Types.Char) ->
                 case c of wild { GHC.Types.C# c# ->
                 case {__pkg_ccall base-4.10.1.0 GHC.Prim.Int#
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Prim.Int# #)}
                        (GHC.Prim.ord# c#)
                        GHC.Prim.realWorld# of wild1 { (#,#) ds ds1 ->
                 case ds1 of wild2 {
                   DEFAULT -> wild 0# -> Acronym.abbreviate1 } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

