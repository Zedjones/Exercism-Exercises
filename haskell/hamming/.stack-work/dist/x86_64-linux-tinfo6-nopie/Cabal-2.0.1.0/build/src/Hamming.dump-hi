
==================== FINAL INTERFACE ====================
2018-05-01 19:32:45.34851121 UTC

interface hamming-2.1.0.6-a2O7F1HgDf4ouiv8rAzot:Hamming 8022
  interface hash: e6f0fcf1bdbfb73d9220bc2c09c6a792
  ABI hash: 96307c48234a760478989fb8b17b446b
  export-list hash: f4dcb480c64418f83b9886e8560a8157
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 26e0ff4b0ff758fc4ebf6a516aed248e
  sig of: Nothing
  used TH splices: False
  where
exports:
  Hamming.distance
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
bf0b395144dcaf00ae441a5b793ad546
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Hamming.$trModule3
                   Hamming.$trModule1) -}
ec04f45e0db2a22c7db125ba524c9c12
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Hamming.$trModule2) -}
c10653f8ad069702968aa70665e7cc6a
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Hamming"#) -}
e02a32fadfad0ffe2154f5c89748540d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Hamming.$trModule4) -}
7eca7e002447b4faa8c6d4171a220a86
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("hamming-2.1.0.6-a2O7F1HgDf4ouiv8rAzot"#) -}
afa79cd8f3e656b1e060f3acbaae1915
  distance ::
    GHC.Base.String -> GHC.Base.String -> GHC.Base.Maybe GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: (\ (xs :: GHC.Base.String) (ys :: GHC.Base.String) ->
                 case GHC.List.$wlenAcc @ GHC.Types.Char xs 0# of ww2 { DEFAULT ->
                 case GHC.List.$wlenAcc @ GHC.Types.Char ys 0# of ww1 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww2 ww1) of wild {
                   GHC.Types.False -> GHC.Base.Nothing @ GHC.Types.Int
                   GHC.Types.True
                   -> GHC.Base.Just
                        @ GHC.Types.Int
                        (letrec {
                           $wgo :: [GHC.Types.Char] -> GHC.Prim.Int# -> GHC.Types.Int
                             <join 2> {- Arity: 2, Strictness: <S,1*U><S,U>m, Inline: [0] -}
                           = \ (w :: [GHC.Types.Char]) (ww :: GHC.Prim.Int#) ->
                             case w of wild1 {
                               [] -> GHC.Types.I# ww
                               : y ys1
                               -> letrec {
                                    $wgo1 :: [GHC.Types.Char] -> GHC.Prim.Int# -> GHC.Types.Int
                                      <join 2> {- Arity: 2, Strictness: <S,1*U><S,U>m,
                                                  Inline: [0] -}
                                    = \ (w1 :: [GHC.Types.Char]) (ww3 :: GHC.Prim.Int#) ->
                                      case w1 of wild2 {
                                        [] -> $wgo ys1 ww3
                                        : y1 ys2
                                        -> case y of wild3 { GHC.Types.C# x ->
                                           case y1 of wild4 { GHC.Types.C# y2 ->
                                           case GHC.Prim.tagToEnum#
                                                  @ GHC.Types.Bool
                                                  (GHC.Prim.neChar# x y2) of wild5 {
                                             GHC.Types.False -> $wgo1 ys2 ww3
                                             GHC.Types.True
                                             -> $wgo1 ys2 (GHC.Prim.+# ww3 1#) } } } }
                                  } in
                                  $wgo1 ys ww }
                         } in
                         $wgo xs 0#) } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

